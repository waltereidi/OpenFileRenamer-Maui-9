@if(ItemCount > PageSize)
{
    <nav aria-label="...">
    
    <ul class="pagination">

        <li class="page-item @(CurrentPage == 1 ?"disabled" : "")">
            <a class="page-link" href="#" tabindex="-1">Previous</a>
        </li>
            @for(int i= 0; i < ItemCount/PageSize; i++)
            {
                <li class="page-item">
                    <a class="page-link @(CurrentPage == i+1 ? "active" : "")" 
                        href="#"
                        @onclick="(e)=>OnPageClick(e, i+1)"
                    >i+1</a>
                </li>
            }

        <li class="page-item @(CurrentPage == (PageSize/ItemCount) ? "disabled" : "" )">
            <a class="page-link" href="#">Next</a>
        </li>
    </ul>
</nav>    
}

@code {
    public record PaginationDTO(int page , int skip, int take);
    [Parameter] 
    public int ItemCount { get; set; }

    [Parameter] 
    public EventCallback<PaginationDTO> OnPageChangedCallBack { get; set; }

    private void OnPageClick(MouseEventArgs eventArgs, int page)
    {
        if(page != CurrentPage )
        {
            CurrentPage = page;
            OnPageChangedCallBack.InvokeAsync(new (page , page*PageSize, PageSize));
        }
    }

    private int PageSize = 10;

    private int CurrentPage { get; set; }
    
    protected override void OnParametersSet()
    {
        CurrentPage = 1; 
    }
}
